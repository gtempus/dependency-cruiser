{
  "modules": [
    {
      "source": "src/tmp_lonely.js",
      "dependencies": [],
      "orphan": true,
      "valid": false,
      "rules": [
        {
          "severity": "error",
          "name": "no-orphans"
        }
      ]
    },
    {
      "source": "src/tmp_other.js",
      "dependencies": [
        {
          "resolved": "does-not-exist",
          "coreModule": false,
          "followable": false,
          "couldNotResolve": true,
          "dependencyTypes": [
            "unknown"
          ],
          "module": "does-not-exist",
          "moduleSystem": "cjs",
          "matchesDoNotFollow": false,
          "circular": false,
          "valid": false,
          "rules": [
            {
              "severity": "error",
              "name": "not-to-unresolvable"
            }
          ]
        },
        {
          "resolved": "node_modules/lodash/lodash.js",
          "coreModule": false,
          "followable": false,
          "couldNotResolve": false,
          "dependencyTypes": [
            "npm"
          ],
          "license": "MIT",
          "module": "lodash",
          "moduleSystem": "cjs",
          "matchesDoNotFollow": true,
          "circular": false,
          "valid": false,
          "rules": [
            {
              "severity": "info",
              "name": "prefer-lodash-individuals"
            }
          ]
        }
      ],
      "valid": true
    },
    {
      "source": "does-not-exist",
      "followable": false,
      "coreModule": false,
      "couldNotResolve": true,
      "matchesDoNotFollow": false,
      "dependencyTypes": [
        "unknown"
      ],
      "dependencies": [],
      "valid": true
    },
    {
      "source": "node_modules/lodash/lodash.js",
      "followable": false,
      "coreModule": false,
      "couldNotResolve": false,
      "matchesDoNotFollow": true,
      "dependencyTypes": [
        "npm"
      ],
      "dependencies": [],
      "valid": true
    }
  ],
  "summary": {
    "violations": [
      {
        "from": "src/tmp_lonely.js",
        "to": "src/tmp_lonely.js",
        "rule": {
          "severity": "error",
          "name": "no-orphans"
        }
      },
      {
        "from": "src/tmp_other.js",
        "to": "does-not-exist",
        "rule": {
          "severity": "error",
          "name": "not-to-unresolvable"
        }
      },
      {
        "from": "src/tmp_other.js",
        "to": "node_modules/lodash/lodash.js",
        "rule": {
          "severity": "info",
          "name": "prefer-lodash-individuals"
        }
      }
    ],
    "error": 2,
    "warn": 0,
    "info": 1,
    "totalCruised": 4,
    "optionsUsed": {
      "args": [
        "src/tmp_lonely.js",
        "src/tmp_other.js"
      ],
      "combinedDependencies": false,
      "doNotFollow": {
        "dependencyTypes": [
          "npm",
          "npm-dev",
          "npm-optional",
          "npm-peer",
          "npm-bundled",
          "npm-no-pkg"
        ]
      },
      "exclude": "fixtures|test/integration",
      "externalModuleResolutionStrategy": "node_modules",
      "moduleSystems": [
        "amd",
        "cjs",
        "es6"
      ],
      "outputTo": "-",
      "outputType": "json",
      "prefix": "https://github.com/sverweij/dependency-cruiser/blob/develop/",
      "preserveSymlinks": false,
      "rulesFile": ".dependency-cruiser.json",
      "tsPreCompilationDeps": false
    },
    "ruleSetUsed": {
      "forbidden": [
        {
          "name": "cli-to-main-only",
          "comment": "cli should only depend on the public interface in main",
          "severity": "error",
          "from": {
            "path": "(^src/cli)",
            "pathNot": "^(src/cli/compileConfig/index\\.js)$"
          },
          "to": {
            "pathNot": "^src/main|^node_modules|^fs$|^path$|$1|^package.json$"
          }
        },
        {
          "name": "cli-to-main-only-warn",
          "comment": "cli should only depend on the public interface in main (temp exception)",
          "severity": "warn",
          "from": {
            "path": "^(src/cli/compileConfig/index\\.js)$"
          },
          "to": {
            "pathNot": "^src/(cli|main)|^node_modules|^fs$|^path$|$1|^package.json$"
          }
        },
        {
          "name": "bin-to-cli-only",
          "comment": "bin should only depend on cli",
          "severity": "error",
          "from": {
            "path": "(^bin/dependency-cruise)"
          },
          "to": {
            "pathNot": "^src/cli|^node_modules|^package.json$"
          }
        },
        {
          "name": "restrict-fs-access",
          "comment": "restrict file access to a few modules only",
          "severity": "error",
          "from": {
            "pathNot": "^src/(extract/parse|extract/resolve|extract/gatherInitialSources\\.js|cli)|^test"
          },
          "to": {
            "path": "^fs$"
          }
        },
        {
          "name": "no-inter-module-test",
          "severity": "error",
          "from": {
            "path": "(^test/[^\\/]+/)[^\\.]+\\.spec\\.js"
          },
          "to": {
            "path": "^test/[^\\/]+/.+",
            "pathNot": "utl|$1[^\\.]+\\.json$"
          }
        },
        {
          "name": "prefer-lodash-individuals",
          "comment": "Flag dependencies that include lodash as a whole (better use individual lodash packages e.g. 'lodash/get')",
          "severity": "info",
          "from": {},
          "to": {
            "path": "lodash\\.js"
          }
        },
        {
          "name": "no-dep-on-test",
          "severity": "error",
          "from": {
            "path": "^(src|bin)"
          },
          "to": {
            "path": "^test|\\.spec\\.js$"
          }
        },
        {
          "name": "no-external-to-here",
          "comment": "you never know...",
          "severity": "info",
          "from": {
            "pathNot": "^(src|test|bin)"
          },
          "to": {
            "path": "^(src|test)"
          }
        },
        {
          "name": "not-to-dev-dep",
          "severity": "error",
          "comment": "because an npm i --production will otherwise deliver an unreliably running module",
          "from": {
            "path": "^(bin|src)"
          },
          "to": {
            "dependencyTypes": [
              "npm-dev"
            ]
          }
        },
        {
          "name": "optional-deps-used",
          "severity": "error",
          "comment": "we don't work with optional dependencies",
          "from": {},
          "to": {
            "dependencyTypes": [
              "npm-optional"
            ]
          }
        },
        {
          "name": "peer-deps-used",
          "comment": "we don't work with peer dependencies",
          "severity": "error",
          "from": {},
          "to": {
            "dependencyTypes": [
              "npm-peer"
            ]
          }
        },
        {
          "name": "no-unvetted-license",
          "comment": "Warn in case some dependency uses a license that's not vetted (the licenses might be OK, but your legal department might have 2nd thoughts about them)",
          "severity": "warn",
          "from": {},
          "to": {
            "licenseNot": "MIT|ISC"
          }
        },
        {
          "name": "no-orphans",
          "comment": "Modules without any incoming or outgoing dependencies are might indicate unused code.",
          "severity": "error",
          "from": {
            "orphan": true,
            "pathNot": "\\.d\\.ts$"
          },
          "to": {}
        },
        {
          "name": "no-circular",
          "comment": "circular dependencies will make you dizzy",
          "severity": "error",
          "from": {},
          "to": {
            "circular": true
          }
        },
        {
          "name": "no-deprecated-core",
          "comment": "These core modules are deprecated - find an alternative.",
          "severity": "error",
          "from": {},
          "to": {
            "dependencyTypes": [
              "core"
            ],
            "path": "^(punycode|domain|constants|sys|_linklist|_stream_wrap)$"
          }
        },
        {
          "name": "no-duplicate-dep-types",
          "comment": "including things twice?",
          "severity": "error",
          "from": {},
          "to": {
            "moreThanOneDependencyType": true
          }
        },
        {
          "name": "no-non-package-json",
          "severity": "error",
          "comment": "because an npm i --production will otherwise deliver an unreliably running module",
          "from": {},
          "to": {
            "dependencyTypes": [
              "npm-no-pkg",
              "npm-unknown"
            ]
          }
        },
        {
          "name": "not-to-deprecated",
          "comment": "These modules are deprecated - find an alternative.",
          "severity": "error",
          "from": {},
          "to": {
            "dependencyTypes": [
              "deprecated"
            ]
          }
        },
        {
          "name": "not-to-unresolvable",
          "severity": "error",
          "from": {},
          "to": {
            "couldNotResolve": true
          }
        }
      ],
      "allowed": [],
      "allowedSeverity": "warn"
    }
  }
}